@page "/create-bug"

@if (IsLoading)
{
    <div>Loading...</div>
}
else
{
    <TextInputRow Title="Title"
                  Placeholder="Enter bug title"
                  @bind-Value="Title"></TextInputRow>

    <TextInputArea Title="Description"
                   Placeholder="Enter bug description"
                   @bind-Value="Description"></TextInputArea>

    <DropDownList Title="Priority"
                  Items="@Priorities"
                  @bind-Selected="Priority"></DropDownList>

    <DropDownList Title="Status"
                  Items="@Statuses"
                  @bind-Selected="Status"></DropDownList>

    <DropDownList Title="Category"
                  Items="@Categories"
                  @bind-Selected="Category"></DropDownList>

    <button @onclick="CreateBug">Create bug</button>
}

@code {
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    [Inject] private UserState UserState { get; set; } = default!;
    [Inject] private BugClient BugClient { get; set; } = default!;
    [Inject] private PriorityClient PriorityClient { get; set; } = default!;
    [Inject] private StatusClient StatusClient { get; set; } = default!;
    [Inject] private CategoryClient CategoryClient { get; set; } = default!;
    [Inject] private ToastService ToastService { get; set; } = default!;

    private List<Priority>? Priorities { get; set; }
    private List<Status>? Statuses { get; set; }
    private List<Category>? Categories { get; set; }

    private string Title { get; set; } = string.Empty;
    private string Description { get; set; } = string.Empty;
    private Priority? Priority { get; set; }
    private Status? Status { get; set; }
    private Category? Category { get; set; }

    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
        IsLoading = false;
    }

    private async Task LoadDataAsync()
    {
        Priorities = await PriorityClient.GetAllAsync();
        Statuses = await StatusClient.GetAllAsync();
        Categories = await CategoryClient.GetAllAsync();
    }

    private async Task CreateBug()
    {
        Bug bug = new Bug
            {
                Title = this.Title,
                Description = this.Description,
                PriorityId = this.Priority?.Id,
                StatusId = this.Status?.Id,
                CategoryId = this.Category?.Id,
                AuthorId = UserState.CurrentUser?.Id,
                LastEditorId = UserState.CurrentUser?.Id
            };

        var response = await BugClient.CreateAsync(bug);
        if (response.IsSuccessStatusCode)
        {

            ToastService.ShowToast(new ToastMessage(
                message: "Bug created succesfully",
                level: ToastLevel.Success));

            NavigationManager.NavigateTo("/");
        }
    }
}
